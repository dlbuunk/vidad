Welcome to the Vidad project,
this is an attempt to write an OS for the x86 architecture.
The project is (almost) fully written in C++.
The goal is to write a mostly monolithic kernel.

After a half-succesfull attempt in early 2011, i am now doing a full rewrite.
(Now is early september 2011)


===== Outline of the project ==================================================

The Vidad kernel consists of the following parts:

==> A bootloader, specifically written for the kernel.

==> kinit, the kernel starup and shutdown code.
==> klog, the kernel logger.

==> malloc, the memory management code, provides "new" and "delete".
	Furthermore, malloc does will have a page frame allocator.
==> stream, contains the interface for the stream model. Most data is
	transferred throug a stream.
==> event, contains the code for the event subsystem, all sorts of "events"
	are passed throug this system, IRQ's, some keystrokes, signals.
==> thread, provides the code for multithreading.

==> process, manages processes and exposes kernel functions to userspace.
==> IO, contains all in-kernel drivers.


===== Status of the project ==================================================
(as of September 5, 2011)

==> Bootloader done.
==> Started writing on kinit and klog.


===== Building && running =====================================================

To buid the kernel run:
	make
in the main dir.


To test you need bochs, just run:
	bochs
NOTE: i still need to put up the config file.


If you want to test it on a real computer, you'll need to have a floppy drive.
First copy the kernel to the floppy (this will shred the floppy!):
	make write
and then reboot to test it. (at your own risk)


===== Contact =================================================================

The Vidad kernel is written by D.L.Buunk (dlbuunk@gmail.com).

Issues can be submitted to the issue tracker of the main Vidad repository.

NOTE: the kernel/bootloader is released under the GPL version 3.
NOTE to self: need to put up notices.

